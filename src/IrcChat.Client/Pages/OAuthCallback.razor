@page "/oauth-callback"
@using IrcChat.Shared.Models
@using IrcChat.Client.Services
@inject OAuthClientService OAuthClient
@inject OAuthStateService OAuthState
@inject NavigationManager Navigation
@inject HttpClient Http

<PageTitle>Authentification en cours...</PageTitle>

<div class="login-fullscreen">
    <div class="login-card">
        <div class="loading-message">
            <div class="spinner"></div>
            <span>Authentification en cours...</span>
        </div>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var code = query["code"];
        var state = query["state"];
        var error = query["error"];

        if (!string.IsNullOrEmpty(error))
        {
            Navigation.NavigateTo($"/oauth-login?error={Uri.EscapeDataString(error)}");
            return;
        }

        if (!string.IsNullOrEmpty(code) && !string.IsNullOrEmpty(state))
        {
            try
            {
                var redirectUri = $"{Navigation.BaseUri}oauth-callback";
                var result = await OAuthClient.HandleCallbackAsync(code, state, redirectUri);

                if (result != null)
                {
                    await OAuthState.SetAuthStateAsync(
                        result.Token,
                        result.Username,
                        result.Email,
                        result.AvatarUrl,
                        result.UserId
                    );

                    Http.DefaultRequestHeaders.Authorization =
                        new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", result.Token);

                    Navigation.NavigateTo("/chat");
                }
                else
                {
                    Navigation.NavigateTo("/oauth-login?error=authentication_failed");
                }
            }
            catch (Exception ex)
            {
                Navigation.NavigateTo($"/oauth-login?error={Uri.EscapeDataString(ex.Message)}");
            }
        }
        else
        {
            Navigation.NavigateTo("/oauth-login?error=missing_parameters");
        }
    }
}
