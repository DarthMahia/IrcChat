@page "/admin/login"
@using IrcChat.Shared.Models
@using IrcChat.Client.Services
@inject HttpClient Http
@inject IAuthStateService AuthState
@inject NavigationManager Navigation

<PageTitle>Connexion Admin - IRC Chat</PageTitle>

<div class="admin-container">
    <div class="admin-login">
        <h2>Connexion Administrateur</h2>
        <input @bind="loginUsername" placeholder="Nom d'utilisateur" />
        <input @bind="loginPassword" type="password" placeholder="Mot de passe"
               @onkeypress="HandleLoginKeyPress" />
        <button @onclick="Login">Se connecter</button>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error">@errorMessage</div>
        }
        <a href="/login" class="back-link">‚Üê Retour au chat</a>
    </div>
</div>

@code {
    private string loginUsername = "";
    private string loginPassword = "";
    private string errorMessage = "";

    protected override void OnInitialized()
    {
        if (AuthState.IsAuthenticated)
        {
            Navigation.NavigateTo("/admin");
        }
    }

    private async Task Login()
    {
        errorMessage = "";

        try
        {
            var request = new LoginRequest
            {
                Username = loginUsername,
                Password = loginPassword
            };

            var response = await Http.PostAsJsonAsync("/api/auth/login", request);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                if (result != null)
                {
                    AuthState.SetAuthState(result.Token, result.Username);
                    Http.DefaultRequestHeaders.Authorization =
                        new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", result.Token);
                    Navigation.NavigateTo("/admin");
                }
            }
            else
            {
                errorMessage = "Identifiants incorrects";
            }
        }
        catch
        {
            errorMessage = "Erreur de connexion";
        }
    }

    private async Task HandleLoginKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await Login();
        }
    }
}
