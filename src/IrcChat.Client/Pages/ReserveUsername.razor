@page "/reserve"
@using IrcChat.Shared.Models
@using IrcChat.Client.Services
@inject UnifiedAuthService Auth
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>Réserver mon pseudo - IRC Chat</PageTitle>

@if (!isInitialized)
{
    <div class="login-fullscreen">
        <div class="login-card">
            <div class="loading-message">
                <div class="spinner"></div>
                <span>Chargement...</span>
            </div>
        </div>
    </div>
}
else
{
    <div class="login-fullscreen">
        <div class="login-card">
            <div class="login-header">
                <h1>🔒 Réserver mon pseudo</h1>
                <h2>@usernameToReserve</h2>
                <p>Choisissez un compte pour réserver ce pseudo</p>
            </div>

            <div class="oauth-buttons">
                <button class="oauth-btn google" @onclick="() => ReserveWithProvider(ExternalAuthProvider.Google)">
                    <svg width="18" height="18" viewBox="0 0 18 18">
                        <path fill="#4285F4"
                            d="M16.51 8H8.98v3h4.3c-.18 1-.74 1.48-1.6 2.04v2.01h2.6a7.8 7.8 0 0 0 2.38-5.88c0-.57-.05-.66-.15-1.18Z" />
                        <path fill="#34A853"
                            d="M8.98 17c2.16 0 3.97-.72 5.3-1.94l-2.6-2a4.8 4.8 0 0 1-7.18-2.54H1.83v2.07A8 8 0 0 0 8.98 17Z" />
                        <path fill="#FBBC05" d="M4.5 10.52a4.8 4.8 0 0 1 0-3.04V5.41H1.83a8 8 0 0 0 0 7.18l2.67-2.07Z" />
                        <path fill="#EA4335"
                            d="M8.98 4.18c1.17 0 2.23.4 3.06 1.2l2.3-2.3A8 8 0 0 0 1.83 5.4L4.5 7.49a4.77 4.77 0 0 1 4.48-3.3Z" />
                    </svg>
                    Google
                </button>

                <button class="oauth-btn microsoft" @onclick="() => ReserveWithProvider(ExternalAuthProvider.Microsoft)">
                    <svg width="18" height="18" viewBox="0 0 23 23">
                        <path fill="#f3f3f3" d="M0 0h23v23H0z" />
                        <path fill="#f35325" d="M1 1h10v10H1z" />
                        <path fill="#81bc06" d="M12 1h10v10H12z" />
                        <path fill="#05a6f0" d="M1 12h10v10H1z" />
                        <path fill="#ffba08" d="M12 12h10v10H12z" />
                    </svg>
                    Microsoft
                </button>

                <button class="oauth-btn facebook" @onclick="() => ReserveWithProvider(ExternalAuthProvider.Facebook)">
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="#1877F2">
                        <path
                            d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
                    </svg>
                    Facebook
                </button>
            
            </div>

            <div class="divider">
                <span>OU</span>
            </div>

            <a href="/login" class="back-link">
                ← Retour
            </a>
        </div>
    </div>
}

@code {
    private string usernameToReserve = "";
    private bool isInitialized = false;

    [SupplyParameterFromQuery(Name = "username")]
    public string? UsernameParam { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Auth.InitializeAsync();
        isInitialized = true;

        usernameToReserve = UsernameParam ?? "";

        if (string.IsNullOrEmpty(usernameToReserve))
        {
            Navigation.NavigateTo("/login");
        }
    }

    private async Task ReserveWithProvider(ExternalAuthProvider provider)
    {
        // Sauvegarder le pseudo à réserver
        await JS.InvokeVoidAsync("sessionStorage.setItem", "temp_username_to_reserve", usernameToReserve);
        Navigation.NavigateTo($"/oauth-login?provider={provider}&mode=reserve");
    }
}